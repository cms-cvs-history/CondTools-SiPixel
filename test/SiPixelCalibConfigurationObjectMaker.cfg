// createSiPixelCalibConfigurationfromfile.cfg, by Freya Blekman, fblekman@lepp.cornell.edu

process SiPixelCalibConfTest = {

# no source is needed as we're reading in a file, only read one 'fake' event
#   source = EmptySource {} 
    source = EmptyIOVSource{ 
	string timetype="runnumber"
	untracked uint32 firstRun = 1
        untracked uint32 lastRun = 1
        uint32 interval = 1
    }
    
   untracked PSet maxEvents = {untracked int32 input = 1}

# the message logger:
   service = MessageLogger { untracked vstring destinations = {"cout"} }

   include "CondCore/DBCommon/data/CondDBCommon.cfi"

#  use either the oracle or sql db
    # so this one
#  replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_COND_TIF_PIXELS"
#  replace CondDBCommon.DBParameters.authenticationPath = "/afs/cern.ch/cms/DB/conddb"
    # or this one
   replace CondDBCommon.connect = "sqlite_file:siPixelCalibConfiguration.db"
   replace CondDBCommon.DBParameters.authenticationPath="."

   replace CondDBCommon.timetype = "runnumber"
   replace CondDBCommon.DBParameters.messageLevel = 0

##########
# MAKE REALLY SURE THE tag, run number and input file are matched!!!
##########

   service = PoolDBOutputService {
	using CondDBCommon
	VPSet toPut = { { 
			string record = "SiPixelCalibConfigurationRcd"
			string tag = "SiPixelCalibConfiguration_test"
			} }
   }


 module SiPixelCalibConfigurationObjectMaker = SiPixelCalibConfigurationObjectMaker{
	untracked string inputFileName = "/afs/cern.ch/cms/Tracker/Pixel/forward/FPIX/HC+Z1/calib_PixelAlive_281.dat"
   }

   path p1 = {SiPixelCalibConfigurationObjectMaker}
}
