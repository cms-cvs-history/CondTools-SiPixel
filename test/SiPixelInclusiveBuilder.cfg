process SiPixelInclusiveBuilder = {
  source = EmptyIOVSource {
      string timetype = "runnumber"
      uint64 firstValue = 1
      uint64 lastValue = 1
      uint64 interval = 1
  }
  untracked PSet maxEvents = { untracked int32 input = 1 }

  service = MessageLogger {
    untracked vstring destinations = { "event.log", "error.log", "debug.log" }
    untracked PSet error.log = { 
      untracked string threshold = "WARNING" 
      untracked PSet default = { 
        untracked int32 limit = -1 
	bool noLineBreaks = false 
      } 
    }
    untracked PSet event.log = { 
      untracked string threshold = "INFO"    
      untracked PSet default = { 
        untracked int32 limit = -1 
	bool noLineBreaks = false 
      } 
    }
    untracked PSet debug.log = { 
      untracked string threshold = "DEBUG"   
      untracked PSet default = { 
        untracked int32 limit = -1 
	bool noLineBreaks = false 
      } 
    }
    untracked vstring debugModules = { "*" } // comment to inhibit time-consuming debug verbosity
  }
  # Initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # Tracker SimGeometryXML
  include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"

  # Tracker Geometry Builder
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  # Tracker Numbering Builder
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # Gain Calibration Service
  include "CondTools/SiPixel/data/SiPixelGainCalibrationService.cfi"

  include "CondCore/DBCommon/data/CondDBCommon.cfi"

  service = PoolDBOutputService {
    # using CondDBCommon
    untracked string timetype = "runnumber"
    string connect = "oracle://cms_orcoff_int2r/CMS_COND_PIXEL"
    VPSet toPut = { 
      { string record = "SiPixelFedCablingMapRcd"          string tag = "SiPixelFedCablingMap_v11" }, 
      { string record = "SiPixelLorentzAngleRcd"           string tag = "trivial_LorentzAngle_mc" }, 
      { string record = "SiPixelGainCalibrationOfflineRcd" string tag = "V2_trivial_TBuffer_mc" }, 
      { string record = "SiPixelGainCalibrationForHLTRcd" string tag = "V2_trivial_TBuffer_hlt_mc" } 
    }
    untracked string BlobStreamerName = "TBufferBlobStreamingService"
    PSet DBParameters = {
      untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
      untracked int32 messageLevel = 3
      untracked int32 connectionTimeOut = 0
      untracked int32 connectionRetrialPeriod = 10
      untracked int32 connectionRetrialTimeOut = 60
      untracked bool  enableConnectionSharing = true
      untracked bool  enableReadOnlySessionOnUpdateConnection = false
      untracked bool  enablePoolAutomaticCleanUp = false
      untracked int32 idleConnectionCleanupPeriod = 10
    } 
  }
  # converter to assign DetUnit to FED number
  es_module = PixelToLNKAssociateFromAsciiESProducer {
    string fileName = "pixelToLNK.ascii" // input txt file
  }
  module MapWriter = SiPixelFedCablingMapWriter {
    string record = "SiPixelFedCablingMapRcd" 
    untracked string associator = "PixelToLNKAssociateFromAscii" // converter to assign DetUnit to FED number
  }
  # include "CalibTracker/SiPixelLorentzAngle/data/SiPixelLorentzAngleDB.cfi"
  module SiPixelLorentzAngle = SiPixelLorentzAngleDB {
    double magneticField = 4.0
  }
  module SiPixelCondObjOfflineBuilder = SiPixelCondObjOfflineBuilder {
    # Max number of detector modules (whole detector > 1500)
    int32 numberOfModules = 2000
    
    # Append DataBase payload to existing file
    untracked bool appendMode = false
    
    # DB record name
    string record = "SiPixelGainCalibrationOfflineRcd"
    
    # Calibration from input file or random number generator
    bool fromFile = false
    string fileName = "../macros/phCalibrationFit_C0.dat"
    
    # Parameters for random number generator
    double meanPed  = 28.2
    double rmsPed   =	0.0
    double meanGain =  2.8
    double rmsGain  =	0.0

	double deadFraction = 0.0000  # fraction of dead pixels = # dead pixels / # all pixels
	
         double secondRocRowGainOffset = 0.0
         double secondRocRowPedOffset  = 0.0

    using SiPixelGainCalibrationServiceParameters
  }
  module SiPixelCondObjForHLTBuilder = SiPixelCondObjForHLTBuilder {
    # Max number of detector modules (whole detector > 1500)
    int32 numberOfModules = 2000
    
    # Append DataBase payload to existing file
    untracked bool appendMode = false
    
    # DB record name
    string record = "SiPixelGainCalibrationForHLTRcd"
    
    # Calibration from input file or random number generator
    bool fromFile = false
    string fileName = "../macros/phCalibrationFit_C0.dat"
    
    # Parameters for random number generator
    double meanPed  = 28.2
    double rmsPed   =	0.0
    double meanGain =  2.8
    double rmsGain  =	0.0
    double secondRocRowGainOffset = 0.0
    double secondRocRowPedOffset  = 0.0

    using SiPixelGainCalibrationServiceParameters
  }
  # scheduler path
  path p = { 
    SiPixelLorentzAngle, 
    MapWriter, 
    SiPixelCondObjOfflineBuilder,
    SiPixelCondObjForHLTBuilder
  }      
  module print = AsciiOutputModule {}
  
  endpath ep = { print }
}

