process SiPixelInclusiveReader = {
# Runs the various test programs for the pixel gain, lorentz angle and cabling map payloads.
# By Freya Blekman
# MessageLogger
    include "FWCore/MessageService/data/MessageLogger.cfi"

    untracked PSet maxEvents = {untracked int32 input = 1}
    source = EmptySource {
	
	untracked uint32 firstRun = 1 
	untracked uint32 numberEventsInRun = 10
    }
    
    service = Timing {}
    service = SimpleMemoryCheck {
	untracked int32 ignoreTotal = 0 # default is one
    } 
    
    # Tracker SimGeometryXML
    include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
    
    # Tracker Geometry Builder
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    
    # Tracker Numbering Builder
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    # SiPixelGainCalibrationService
    include "CondTools/SiPixel/data/SiPixelGainCalibrationService.cfi"
    
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    #
    # SQLIte
    #
    #  replace CondDBCommon.connect = "sqlite_file:test.db"
    # CMS_ORCOFF_INT2R
    #
    replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_COND_PIXEL" 
    replace CondDBCommon.DBParameters.authenticationPath = "/afs/cern.ch/cms/DB/conddb"

#    replace CondDBCommon.connect = "frontier://FrontierProd/CMS_COND_20X_PIXEL"
#    replace CondDBCommon.DBParameters.authenticationPath = "/afs/cern.ch/cms/DB/conddb"

    replace CondDBCommon.DBParameters.messageLevel = 3
    #
    # Calibrations from DB
    #
    es_source = PoolDBESSource { 
	using CondDBCommon
	VPSet toGet = { 
	    { string record = "SiPixelFedCablingMapRcd"          string tag = "SiPixelFedCablingMap_v10_mc" }, 
	    { string record = "SiPixelLorentzAngleRcd"           string tag = "trivial_LorentzAngle_mc" }, 
	    { string record = "SiPixelGainCalibrationOfflineRcd" string tag = "V2_trivial_TBuffer_mc" } ,
	    { string record = "SiPixelGainCalibrationForHLTRcd" string tag = "V2_trivial_TBuffer_hlt_mc" } 
	}
	untracked string BlobStreamerName="TBufferBlobStreamingService"
    }
    
    es_prefer = PoolDBESSource{ }
    
    #
    # Readers
    #
    module  SiPixelCondObjOfflineReader =  SiPixelCondObjOfflineReader { 
	string fileName = "histos_Offline.root"
	using SiPixelGainCalibrationServiceParameters
    }
    module  SiPixelCondObjForHLTReader =  SiPixelCondObjForHLTReader { 
	string fileName = "histos_HLT.root"
	using SiPixelGainCalibrationServiceParameters
    }
    
    module SiPixelLorentzAngleReader = SiPixelLorentzAngleReader {}
    
    module SiPixelFedCablingMapAnalyzer = SiPixelFedCablingMapAnalyzer {}
    #
    # Path declaration
    #
    path p = { SiPixelCondObjOfflineReader, SiPixelLorentzAngleReader, SiPixelFedCablingMapAnalyzer,SiPixelCondObjForHLTReader }
    
    
    module print = AsciiOutputModule {}
   endpath ep = { print }
}
